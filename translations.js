
//! THIS FILE IS AUTO GENERATED BY https://inlang.dev
//! Do not modify by hand.
//
//
// This file exports the following variables
//      'translations': contains the translations
//      'inlangConfig': contains the configuration for inlang
//
// Futhermore, a 't()' function is exported which can be
// invoked to translate given text e.g.
//      t("Hello World") -> "Hallo Welt"

import { Inlang } from 'inlang';

/**
 * Contains translations.
 */
export const translations = {
  "Learn": {
    "de": "Lerne"
  },
  "Deploy": {
    "de": "Bereitstellen"
  },
  "Examples": {
    "de": "Beispiele"
  },
  "Powered by": {
    "de": "Angetrieben von"
  },
  "Documentation": {
    "de": "Dokumentation"
  },
  "Create Next App": {
    "de": "Nächste App erstellen"
  },
  "Welcome to Next.js!": {
    "de": "Willkommen bei Next.js!"
  },
  "Get started by editing": {
    "de": "Beginne mit der Bearbeitung"
  },
  "Discover and deploy boilerplate example Next.js projects.": {
    "de": "Entdecke Next.js-Beispielprojekte und setze sie ein."
  },
  "Find in-depth information about Next.js features and API.": {
    "de": "Hier findest du ausführliche Informationen über die Funktionen und die API von Next.js."
  },
  "Learn about Next.js in an interactive course with quizzes!": {
    "de": "Lerne Next.js in einem interaktiven Kurs mit Quiz kennen!"
  },
  "Instantly deploy your Next.js site to a public URL with Vercel.": {
    "de": "Mit Vercel kannst du deine Next.js-Website sofort auf einer öffentlichen URL bereitstellen."
  }
};

/**
 * Use for fine grained inlang setup.
 *
 * If you don't need fine granined setup, use the provided t() function.
 */
export const inlangConfig = {
  "projectId": "a30a3766-a471-4f24-a788-7ee0096062e7",
  "locales": [
    "de"
  ],
  "defaultLocale": "en"
};

/**
 * Private inlang object used for the t() function. 
 */
let inlang;

export function setLocale(locale){
	if (inlang === undefined) {
		inlang = new Inlang({
			projectConfig: inlangConfig,
			translations: translations,
			locale: locale
		});
	} else {
		inlang.locale = locale
	}
}

/**
 * Auto-configuration inlang object which can be used directly to translate text.
 *
 * Use 'setLocale()' to set the locale which t() uses. 
 *
 * @returns translated text (if exists)
 */
export function t(text, args) {
	if (inlang === undefined) {
		inlang = new Inlang({
			projectConfig: inlangConfig,
			translations: translations,
			locale: inlangConfig.defaultLocale
		});
	}
	return inlang.translate(text, args);
}
